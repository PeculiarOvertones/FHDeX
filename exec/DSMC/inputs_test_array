&common

  ! Problem specification
  prob_lo(1:3) = -3e-4 3e-4 0      ! physical lo coordinate
  prob_hi(1:3) = -3e-4 3e-4 145e-7     ! physical hi coordinate (from Jing's paper; lateral dimesions are smaller)
    
  n_cells(1:3) = 32 32 4                  ! leads to 50% dry + 50% wet
  ! max number of cells in a box
  max_grid_size(1:3) = 16 16 4
  max_particle_tile_size(1:3) = 256 256 256 ! set to zero to use max_grid_size, setting a very large number will also use max grid size, but will also ensure that refined es and particle grids will do the same.
  ! OMP tile 

  ! Time-step control
  fixed_dt = 1e-8                         ! 1e-13 is too large 

  ! Controls for number of steps between actions
  max_step = 200
 
  plot_int = 2
  plot_ascii = 1
  struct_fact_int = -1
  n_steps_skip = 10000
  chk_int  = -1

  radialdist_int = 0
  cartdist_int = 0
  binsize = 0.5e-8
  searchDist = 4.e-7

  move_tog = 1 ! ! Total particle move. 0 = off, 1 = single step, 2 = midpoint


  !particle initialization
  ! 1 = read from particles.dat, 2 = spread randomly over domain
  ! for phonon crystal case, make sure phonons are outside the cylinders
  particle_placement = 1
  ! -1 = calculate based on n0
  particle_count = 100
  ! real particles per simulator particle
  ! to mimic much larger # of particles; 1 simulated particle = particle_neff * actual particles
  particle_neff = 1
  ! ignore if particle_count is positive
  particle_n0 = 3.01e20  ! 0.5M

  !Species info
  !--------------
  nspecies = 1
  mass = 5.887e-23 
  diameter = 2.488e-8 
  
  ! Stochastic parameters
  ! random numbers are generated by randomly selecting location to fetch the data sequence. When seed # if fixed, the "random" # can be reproduced
  seed = 2
  k_B = 1.38064852e-16 ! Boltzmann constant in cgs
  T_init = 4.00 ! temperature
  variance_coef_mom = 1 ! not needed for phonon
   
  
  ! Domain Boundary conditions
  ! ----------------------
  ! BC specifications:
  ! -1 = periodic, 1 or 2 = specular  - We can fiddle with this later, just have to be careful because DISCOS is using the same code
  bc_vel_lo(1:3) = 2 2 2
  bc_vel_hi(1:3) = 2 2 2
  
/
